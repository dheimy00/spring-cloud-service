server:
  port: 8081
  
spring:

  zipkin:
    base-url: http://localhost:9411
  sleuth:
    sampler:
      probability: 1.0
      
  application:
    name: order-service
    
  cloud:
    config:
      import-check:
        enabled: false
        
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: root
    testWhileIdle: true
    url: jdbc:mysql://localhost:3306/orderService?useUnicode=true&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true&useSSL=false
    validationQuery: SELECT 1
  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
      max_allowed_packet: 2000
    show-sql: true


management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: "always"

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    hostname: localhost

#Resilinece4j Properties
resilience4j:
  circuitbreaker:
    instances:
      inventory:
        registerHealthIndicator: true
        event-consumer-buffer-size: 10
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 5    
        failureRateThreshold: 50
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true

#Resilience4J Timeout Properties
  timelimiter:
    instances:
      inventory:
        timeout-duration: 3s

#Resilience4J Retry Properties
  retry:
    instances:
      inventory:
        max-attempts: 3
        wait-duration: 5s        


# Kafka Properties
  kafka:
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring:
          json:
            type:
              mapping: event:io.com.orders.event.OrderPlacedEvent
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
    template:
      default-topic: notificationTopic
    bootstrap-servers: localhost:9092   